% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/pattern_extraction.R
\name{extend_blueprint_cn_for_equal_bin}
\alias{extend_blueprint_cn_for_equal_bin}
\title{Extend Blueprint Copy Number Data for Equal-Sized Bins}
\usage{
extend_blueprint_cn_for_equal_bin(seg_dat, window_sizes, bin_unit)
}
\arguments{
\item{seg_dat}{A data frame of copy number segments where:
\itemize{
\item Rows represent clones/samples
\item Columns represent genomic windows
\item Values represent copy numbers
}}

\item{window_sizes}{A numeric vector containing the size of each window in base pairs,
must match the number of columns in seg_dat}

\item{bin_unit}{The desired size of each bin in base pairs}
}
\value{
A data frame with:
\itemize{
\item Same number of rows as input
\item Expanded columns based on window sizes and bin unit
\item Column names as "original_window_name_binIndex"
\item Original row names preserved
}
}
\description{
This function extends a copy number (CN) data frame (\code{seg_dat}) to ensure that each genomic window
is divided into equal-sized bins of a specified size (\code{bin_unit}). It replicates columns in the
input data frame based on the size of each window and the desired bin size, creating a new data
frame with expanded columns.
}
\details{
The function:
\enumerate{
\item Calculates how many bins each window needs based on its size
\item Replicates copy number values to fill the required bins
\item Maintains data continuity while creating equal-sized segments
}
}
\note{
Window sizes that aren't exact multiples of bin_unit will be rounded up
to ensure complete coverage
}
\examples{
\dontrun{
seg_data <- data.frame(
  chr1_1000_3000 = c(2, 1),
  chr1_3000_4000 = c(1, 1),
  row.names = c("clone1", "clone2")
)
window_sizes <- c(2000, 1000)
bin_unit <- 1000

expanded <- extend_blueprint_cn_for_equal_bin(seg_data, window_sizes, bin_unit)
# Returns expanded data frame with bins of 1000bp each
}

}

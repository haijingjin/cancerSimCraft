% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/segment_relevant_functions.R
\name{identify_region_clusters}
\alias{identify_region_clusters}
\title{Identify Clusters of Highly Correlated Genomic Regions}
\usage{
identify_region_clusters(cor_matrix, min_cluster_size, threshold)
}
\arguments{
\item{cor_matrix}{A numeric correlation matrix where rows and columns represent
genomic regions, with column names identifying the regions}

\item{min_cluster_size}{Integer specifying the minimum number of regions required
to form a cluster (must be >= 2)}

\item{threshold}{Numeric value between -1 and 1 specifying the minimum average
correlation required for regions to be considered part of the same cluster}
}
\value{
A list where each element represents a cluster. Each cluster contains:
\itemize{
\item Named integer vector with positions of regions in the cluster
\item Names of the vector correspond to the region identifiers from
the input correlation matrix
}
}
\description{
Identifies clusters of adjacent genomic regions that show high correlation with each other.
Uses a sliding window approach to find contiguous regions where the average pairwise
correlation exceeds a specified threshold.
}
\details{
The function implements a dynamic window-based clustering algorithm:
\itemize{
\item Starts with a window of minimum cluster size
\item Calculates average correlation (excluding diagonal) within the window
\item If average correlation exceeds threshold:
\itemize{
\item Extends window if not at matrix end
\item Finalizes cluster if at matrix end
}
\item If correlation drops below threshold:
\itemize{
\item Finalizes cluster if window size >= minimum
\item Moves to next position if window size < minimum
}
}
}
\examples{
# Create sample correlation matrix
set.seed(123)
n_regions <- 10
cor_mat <- matrix(runif(n_regions^2, -1, 1), nrow = n_regions)
cor_mat[upper.tri(cor_mat)] <- t(cor_mat)[upper.tri(cor_mat)]
diag(cor_mat) <- 1
colnames(cor_mat) <- paste0("region_", 1:n_regions)

# Find clusters
clusters <- identify_region_clusters(
  cor_matrix = cor_mat,
  min_cluster_size = 3,
  threshold = 0.7
)

}
\seealso{
Other clustering functions in the package for genomic analysis
}

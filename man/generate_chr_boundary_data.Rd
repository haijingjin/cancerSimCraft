% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/pattern_extraction.R
\name{generate_chr_boundary_data}
\alias{generate_chr_boundary_data}
\title{Generate Chromosome Boundary Data}
\usage{
generate_chr_boundary_data(chr_arm_table, sub_seg_list, chr_names)
}
\arguments{
\item{chr_arm_table}{A data frame containing chromosome arm information:
\itemize{
\item chrom: Chromosome name
\item start: Start position
\item end: End position
\item region_name: Identifier for the chromosome arm
}}

\item{sub_seg_list}{A list of data frames (by haplotype) containing sub-segment information:
\itemize{
\item chrom: Chromosome name
\item ref_start: Reference start position
\item ref_end: Reference end position
\item region_name: Segment identifier
}}

\item{chr_names}{A character vector of chromosome names to process}
}
\value{
A list containing three elements:
\itemize{
\item segment_info: A list of data frames, one for each chromosome, containing combined
segments from \code{chr_arm_table} and \code{sub_seg_list}.
\item windows_info: A list of data frames, one for each chromosome, containing windows
derived from the unique boundaries of the combined segments.
\item genome_window_vector: Vector of formatted window strings ("chr_start_end")
}
}
\description{
This function processes chromosome arm and sub-segment data to generate boundary information
for specified chromosomes. It combines segments from both input tables, identifies unique
boundaries, and creates windows for each chromosome. Additionally, it constructs a genome-wide
vector of window identifiers.
}
\details{
The function performs these steps for each chromosome:
\enumerate{
\item Extracts and combines segments from chromosome arms and sub-segments
\item Generates windows based on unique boundary positions
\item Creates formatted window identifiers
\item Organizes results by chromosome
}

Windows are generated between each unique boundary point found in the
combined segment data, ensuring all relevant genomic intervals are captured.
}
\examples{
\dontrun{
chr_arms <- data.frame(
  chrom = c("chr1", "chr1"),
  start = c(1, 1000000),
  end = c(1000000, 2000000),
  region_name = c("chr1p", "chr1q")
)
sub_segs <- list(
  maternal = data.frame(...),
  paternal = data.frame(...)
)
chr_names <- c("chr1")
boundaries <- generate_chr_boundary_data(chr_arms, sub_segs, chr_names)
}

}

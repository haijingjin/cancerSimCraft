% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/snv_relevant_functions.R
\name{get_mutations_sc}
\alias{get_mutations_sc}
\title{Get Mutations for Sampled Single Cells}
\usage{
get_mutations_sc(cell_info, mutation_info, sampled_cell_idx = NULL)
}
\arguments{
\item{cell_info}{Data frame containing cell lineage information with columns:
clone, parent, birth_time, death_time, cell_index}

\item{mutation_info}{Data frame containing mutation information with columns:
clone, cell_index, haplotype, chrom, pos, time}

\item{sampled_cell_idx}{Vector of cell indices for which to retrieve mutation information}
}
\value{
A list containing three elements:
\itemize{
\item sampled_sc_mutations: List where each element corresponds to a sampled cell,
containing a data frame of mutations for that cell and its ancestors
\item sampled_mutation_table: Data frame containing all unique mutations across all
sampled cells and their ancestors
\item recurrent_mutation_tracker: List tracking recurrent mutations found across
multiple cells or lineages
}
}
\description{
Extracts and organizes mutation information for specified sampled cells, including
mutations in their ancestral lineage, and identifies recurrent mutations.
}
\details{
This function reconstructs the complete mutation profile for each sampled cell by:
\enumerate{
\item Identifying all ancestral cells for each sampled cell using get_sc_ancestors()
\item Collecting mutations from the sampled cell and all its ancestors
\item Identifying recurrent mutations (mutations that occur multiple times independently)
\item Grouping and processing recurrent mutations for tracking
\item Removing duplicate mutations from the final table
}

The function requires the following helper functions to be defined:
\itemize{
\item get_sc_ancestors(): To identify ancestral cells
\item identify_recurrent_mutations(): To find mutations that appear multiple times
\item group_recurrent_mutations(): To group similar recurrent mutations
\item process_recurrent_mutation(): To track and analyze recurrent mutations
}
}
\examples{
# Create sample cell_info and mutation_info data frames
cell_info <- data.frame(
  clone = c("A", "A", "B", "A", "B"),
  parent = c(NA, 1, 1, 2, 3),
  birth_time = c(0, 10, 10, 15, 20),
  death_time = c(10, NA, NA, NA, NA),
  cell_index = 1:5
)

mutation_info <- data.frame(
  clone = c("A", "A", "B", "A"),
  cell_index = c(1, 2, 3, 4),
  haplotype = c("hap1", "hap1", "hap2", "hap1"),
  chrom = c("chr1", "chr1", "chr2", "chr1"),
  pos = c(1000, 2000, 1500, 1000),
  time = c(5, 12, 15, 18)
)

# Get mutations for cells 4 and 5
mutations <- get_mutations_sc(cell_info, mutation_info, c(4, 5))

# View mutation summary
print(mutations$sampled_mutation_table)

}
\seealso{
\code{\link{simulate_sc_dynamics}}, \code{\link{get_sc_ancestors}}
}

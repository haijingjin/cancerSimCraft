% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/sanity_check_functions.R
\name{check_loss_segments}
\alias{check_loss_segments}
\title{Check Nucleotide Content in Lost Segments}
\usage{
check_loss_segments(clone_genome, clone_segments)
}
\arguments{
\item{clone_genome}{A nested list containing genome sequences:
\itemize{
\item First level: haplotypes (maternal/paternal)
\item Second level: chromosomes with nucleotide sequences
}}

\item{clone_segments}{A nested list containing segment information:
\itemize{
\item First level: haplotypes (maternal/paternal)
\item Second level: data frame with columns:
\itemize{
\item chrom - Chromosome name
\item ori_start - Original start position
\item ori_end - Original end position
\item CN_change - Copy number change (-1 for losses)
\item seg_id - Segment identifier
}
}}
}
\value{
A list where:
\itemize{
\item Names are in format "haplotype_segment_id"
\item Values are nucleotide frequency counts (from Biostrings::alphabetFrequency)
\item Empty list if no loss segments are found
}
}
\description{
Validates that genomic regions marked as lost (CN_change = -1) contain only 'N'
nucleotides in the simulated genome sequence. This ensures proper handling of
deletion events.
}
\details{
The function:
\enumerate{
\item Identifies segments with CN_change = -1
\item For each lost segment:
\itemize{
\item Extracts the sequence
\item Counts nucleotide frequencies
\item Should show only 'N' nucleotides if loss is correctly implemented
}
\item Prints message if no loss segments found in a haplotype
}
}
\examples{
\dontrun{
# Check lost segments in a clone
loss_check <- check_loss_segments(
  clone_genome = synthesized_genome,
  clone_segments = segment_info
)
# Results should show only 'N' nucleotides in lost regions
}
}
